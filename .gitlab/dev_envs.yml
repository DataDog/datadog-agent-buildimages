.linux_dev_env_amd64:
  tags: ["runner:docker"]
  image: "$BUILDENV_REGISTRY/images/docker:20.10-py3"
  variables:
    BASE_IMAGE: datadog/agent-buildimages-linux-glibc-2-17-x64
    BASE_IMAGE_TAG: v58028397-44fec785
    TARGET_IMAGE_ARCH: amd64

.linux_dev_env_arm64:
  tags: ["runner:docker-arm", "platform:arm64"]
  image: "$BUILDENV_REGISTRY/images/docker:20.10-py3"
  variables:
    BASE_IMAGE: datadog/agent-buildimages-linux-glibc-2-23-arm64
    BASE_IMAGE_TAG: v58028397-44fec785
    TARGET_IMAGE_ARCH: arm64

.build_dev_env:
  script:
    # Docker Hub login
    - DOCKER_REGISTRY_LOGIN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.docker_hub_login --with-decryption --query "Parameter.Value" --out text)
    - aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.docker_hub_pwd --with-decryption --query "Parameter.Value" --out text | docker login --username "$DOCKER_REGISTRY_LOGIN" --password-stdin docker.io
    # Build
    - >-
      docker build dev-envs/$PLATFORM
      --build-arg BASE_IMAGE=$BASE_IMAGE
      --build-arg BASE_IMAGE_TAG=$BASE_IMAGE_TAG

.publish_dev_env:
  script:
    # Docker Hub login
    - DOCKER_REGISTRY_LOGIN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.docker_hub_login --with-decryption --query "Parameter.Value" --out text)
    - aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.docker_hub_pwd --with-decryption --query "Parameter.Value" --out text | docker login --username "$DOCKER_REGISTRY_LOGIN" --password-stdin docker.io
    # Build and push
    - >-
      docker build dev-envs/$PLATFORM
      --build-arg BASE_IMAGE=$BASE_IMAGE
      --build-arg BASE_IMAGE_TAG=$BASE_IMAGE_TAG
      --tag registry.ddbuild.io/ci/datadog-agent-buildimages/dev-env-$PLATFORM:$TARGET_IMAGE_ARCH
    - docker push registry.ddbuild.io/ci/datadog-agent-buildimages/dev-env-$PLATFORM:$TARGET_IMAGE_ARCH

lint_dev_envs:
  tags: ["arch:amd64"]
  stage: dev_envs
  needs: []
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/images:v26997867-ebc48a76
  script:
    - hadolint dev-envs/linux/Dockerfile

test_dev_env_linux_amd64:
  extends: [.linux_dev_env_amd64, .build_dev_env]
  stage: dev_envs
  needs: [lint_dev_envs]
  rules:
    - if: '$CI_COMMIT_BRANCH != "main"'
  variables:
    PLATFORM: linux

test_dev_env_linux_arm64:
  extends: [.linux_dev_env_arm64, .build_dev_env]
  stage: dev_envs
  needs: [lint_dev_envs]
  rules:
    - if: '$CI_COMMIT_BRANCH != "main"'
  variables:
    PLATFORM: linux

build_dev_env_linux_amd64:
  extends: [.linux_dev_env_amd64, .publish_dev_env]
  stage: dev_envs
  needs: [lint_dev_envs]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  variables:
    PLATFORM: linux

build_dev_env_linux_arm64:
  extends: [.linux_dev_env_arm64, .publish_dev_env]
  stage: dev_envs
  needs: [lint_dev_envs]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  variables:
    PLATFORM: linux

release_dev_env_linux:
  stage: dev_envs
  needs: [build_dev_env_linux_amd64, build_dev_env_linux_arm64]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  trigger:
    project: DataDog/public-images
    branch: main
    strategy: depend
  variables:
    IMG_SOURCES: registry.ddbuild.io/ci/datadog-agent-buildimages/dev-env-linux:amd64,registry.ddbuild.io/ci/datadog-agent-buildimages/dev-env-linux:arm64
    IMG_DESTINATIONS: agent-dev-env-linux:latest,agent-dev-env-linux:v$CI_PIPELINE_ID-$CI_COMMIT_SHORT_SHA
    IMG_REGISTRIES: dockerhub
    IMG_SIGNING: "false"
