---
.docker_runner_amd:
  tags: ["runner:docker"]
  variables:
    ARCH: x86_64

.docker_runner_arm:
  tags: ["docker-in-docker:arm64"]
  variables:
    ARCH: aarch64

.stats:
  stage: stats
  image: $BUILDENV_REGISTRY/images/docker:27.3.1
  rules:
    - if: $CI_COMMIT_TAG == null
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:install_awscli[collapsed=true]\r\e[0KInstalling AWS CLI"
    - apt-get update && apt-get install -y curl unzip
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-${ARCH}.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - echo -e "\e[0Ksection_end:`date +%s`:install_awscli\r\e[0K"
  script:
    # For size debug purposes
    - docker load -i ./$IMAGE-$IMAGE_VERSION.tar
    - docker images registry.ddbuild.io/ci/datadog-agent-buildimages/$IMAGE${ECR_TEST_ONLY}:$IMAGE_VERSION
    - docker history --no-trunc registry.ddbuild.io/ci/datadog-agent-buildimages/$IMAGE${ECR_TEST_ONLY}:$IMAGE_VERSION
    - export SIZE=$(docker inspect -f "{{ .Size }}" registry.ddbuild.io/ci/datadog-agent-buildimages/$IMAGE${ECR_TEST_ONLY}:$IMAGE_VERSION)
    - ./send-metrics.sh $IMAGE $SIZE $CI_COMMIT_REF_NAME
    - |
      if [ "$CI_PIPELINE_SOURCE" != "schedule" ]; then
        echo -e "\033[0;32m\033[1mImage registry.ddbuild.io/ci/datadog-agent-buildimages/$IMAGE${ECR_TEST_ONLY}:$IMAGE_VERSION is available.\033[0m"
      else
        echo -e "\033[0;33m\033[1mScheduled pipeline, image push skipped.\033[0m"
      fi

stats_rpm_x64:
  extends: [.stats, .docker_runner_amd]
  variables:
    IMAGE: rpm_x64
  needs:
    - job: build_rpm_x64

stats_dd_agent_testing:
  extends: [.stats, .docker_runner_amd]
  variables:
    IMAGE: dd-agent-testing
  needs:
    - job: build_dd_agent_testing

stats_docker_x64:
  extends: [.stats, .docker_runner_amd]
  variables:
    IMAGE: docker_x64
  needs:
    - job: build_docker_x64

stats_btf_gen:
  extends: [.stats, .docker_runner_amd]
  variables:
    IMAGE: btf-gen
  needs:
    - job: build_btf_gen

stats_kernel_version_testing:
  extends: [.stats, .docker_runner_amd]
  variables:
    IMAGE: kernel-version-testing_x64
  needs:
    - job: build_kernel_version_testing_x64

stats_gitlab_agent_deploy:
  extends: [.stats, .docker_runner_amd]
  variables:
    IMAGE: gitlab_agent_deploy
  needs:
    - job: build_gitlab_agent_deploy

stats_linux_x64:
  extends: [.stats, .docker_runner_amd]
  variables:
    IMAGE: linux
    IMAGE_VERSION: v$CI_PIPELINE_ID-${CI_COMMIT_SHORT_SHA}-x64
  needs:
    - job: build_linux_x64

stats_rpm_arm64:
  extends: [.stats, .docker_runner_arm]
  variables:
    IMAGE: rpm_arm64
  needs:
    - job: build_rpm_arm64

stats_rpm_armhf:
  extends: [.stats, .docker_runner_arm]
  variables:
    IMAGE: rpm_armhf
  needs:
    - job: build_rpm_armhf

stats_docker_arm64:
  extends: [.stats, .docker_runner_arm]
  variables:
    IMAGE: docker_arm64
  needs:
    - job: build_docker_arm64

stats_kernel_version_testing_arm64:
  extends: [.stats, .docker_runner_arm]
  variables:
    IMAGE: kernel-version-testing_arm64
  needs:
    - job: build_kernel_version_testing_arm64

stats_linux_arm64:
  extends: [.stats, .docker_runner_arm]
  variables:
    IMAGE: linux
    IMAGE_VERSION: v$CI_PIPELINE_ID-${CI_COMMIT_SHORT_SHA}-arm64
  needs:
    - job: build_linux_arm64
