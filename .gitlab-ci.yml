stages:
  - build
  - test
  - release

variables:
  WINDOWS_RELEASE_IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/windows_1909_x64:v2348149-ba6640d

.build:
  stage: build
  except: [ tags, schedules ]
  tags: [ "runner:docker", "size:large" ]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker-notary:0.6.1
  script:
    - docker build --tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7} --file $DOCKERFILE .
    - docker push 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7}
    # For testing purposes
    - docker tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7} 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID
    - docker push 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID

build_deb_x64:
  extends: .build
  variables:
    DOCKERFILE: deb-x64/Dockerfile
    IMAGE: deb_x64

build_rpm_x64:
  extends: .build
  variables:
    DOCKERFILE: rpm-x64/Dockerfile
    IMAGE: rpm_x64

.armbuild:
  stage: build
  except: [ tags, schedules ]
  tags: ["runner:docker-arm", "platform:arm64"]
  image: arm64v8/docker:18.04
  variables:
    BASE_IMAGE: arm64v8/ubuntu:16.04
    TARGET_ARCH: arm64v8
  script:
    - apk add --update python py-pip
    - pip install awscli
    - aws --version
    - eval "$(aws ecr get-login --region us-east-1 --no-include-email --registry-ids 486234852809)"
    - docker build --build-arg BASE_IMAGE=$BASE_IMAGE --build-arg TARGET_ARCH=$TARGET_ARCH --tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7} --file $DOCKERFILE .
    - docker push 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7}
    # For testing purposes
    - docker tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7} 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID
    - docker push 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID

build_deb_arm64:
  extends: .armbuild
  variables:
    DOCKERFILE: deb-arm/Dockerfile
    IMAGE: deb_arm64

build_deb_armhf:
  extends: .armbuild
  variables:
    DOCKERFILE: deb-arm/Dockerfile
    IMAGE: deb_armhf
    BASE_IMAGE: arm32v7/ubuntu:16.04
    TARGET_ARCH: arm32v7

build_rpm_arm64:
  extends: .armbuild
  variables:
    DOCKERFILE: rpm-arm/Dockerfile
    IMAGE: rpm_arm64
    BASE_IMAGE: arm64v8/centos:7

build_rpm_armhf:
  extends: .armbuild
  variables:
    DOCKERFILE: rpm-arm/Dockerfile
    IMAGE: rpm_armhf
    BASE_IMAGE: arm32v7/centos:7
    TARGET_ARCH: arm32v7

build_system-probe_x64:
  extends: .build
  variables:
    DOCKERFILE: system-probe_x64/Dockerfile
    IMAGE: system-probe_x64

build_system-probe_arm64:
  extends: .armbuild
  variables:
    DOCKERFILE: system-probe_arm64/Dockerfile
    IMAGE: system-probe_arm64

.test:
  stage: test
  except: [ tags, schedules ]

.test_agent6_x64:
  extends: .test
  before_script:
    - git clone https://github.com/DataDog/datadog-agent /go/src/github.com/DataDog/datadog-agent && cd /go/src/github.com/DataDog/datadog-agent
    - VERSION="nightly"
    - git checkout master
    - source /root/.bashrc && conda activate ddpy3
    - inv -e deps --no-checks --verbose --dep-vendor-only
  script:
    - inv -e agent.omnibus-build --release-version "$VERSION" --major-version "6" --python-runtimes "2,3" --base-dir /.omnibus --skip-deps

.test_agent6_arm64:
  extends: .test
  before_script:
    - git clone https://github.com/DataDog/datadog-agent /go/src/github.com/DataDog/datadog-agent && cd /go/src/github.com/DataDog/datadog-agent
    - VERSION="nightly"
    - git checkout master
    - source /root/.bashrc
    - inv -e deps --no-checks --verbose --dep-vendor-only
  script:
    - inv -e agent.omnibus-build --release-version "$VERSION" --major-version "6" --python-runtimes "2,3" --base-dir /.omnibus --skip-deps

test_deb_x64:
  extends: .test_agent6_x64
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:v$CI_PIPELINE_ID
  needs: [ "build_deb_x64" ]
  tags: [ "runner:main", "size:2xlarge" ]

test_deb_arm64:
  extends: .test_agent6_arm64
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_arm64:v$CI_PIPELINE_ID
  needs: [ "build_deb_arm64" ]
  tags: [ "runner:docker-arm", "platform:arm64" ]

test_rpm_x64:
  extends: .test_agent6_x64
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_x64:v$CI_PIPELINE_ID
  needs: [ "build_rpm_x64" ]
  tags: [ "runner:main", "size:2xlarge" ]

test_rpm_arm64:
  extends: .test_agent6_arm64
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_arm64:v$CI_PIPELINE_ID
  needs: [ "build_rpm_arm64" ]
  tags: [ "runner:docker-arm", "platform:arm64" ]

.test_system_probe:
  extends: .test
  before_script:
    - git clone https://github.com/DataDog/datadog-agent /go/src/github.com/DataDog/datadog-agent && cd /go/src/github.com/DataDog/datadog-agent
    - git checkout master
    - inv -e deps --no-checks --verbose --dep-vendor-only
  script:
    - inv -e system-probe.build --go-version=1.13.8 --no-with-bcc

test_system-probe_x64:
  extends: .test_system_probe
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_x64:v$CI_PIPELINE_ID
  needs: [ "build_system-probe_x64" ]
  tags: [ "runner:main", "size:2xlarge" ]

test_system-probe_arm64:
  extends: .test_system_probe
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_arm64:v$CI_PIPELINE_ID
  needs: [ "build_system-probe_arm64" ]
  tags: [ "runner:docker-arm", "platform:arm64" ]

.winbuild: &winbuild
  stage: build
  except: [ tags, schedules ]
  script:
    - $SHORT_CI_COMMIT_SHA = $($CI_COMMIT_SHA.Substring(0,7))
    - $SRC_TAG = "v$CI_PIPELINE_ID-$SHORT_CI_COMMIT_SHA"
    - $SRC_IMAGE = "486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:${SRC_TAG}"
    - echo "build --build-arg BASE_IMAGE=$BASE_IMAGE --build-arg TARGET_ARCH=$TARGET_ARCH --build-arg WINDOWS_VERSION=$WINDOWS_VERSION --tag $SRC_IMAGE --file $DOCKERFILE ."
    - powershell -Command "docker build --no-cache --build-arg BASE_IMAGE=$BASE_IMAGE --build-arg TARGET_ARCH=$TARGET_ARCH --build-arg WINDOWS_VERSION=$WINDOWS_VERSION --tag $SRC_IMAGE --file $DOCKERFILE ."
    - docker push $SRC_IMAGE
  after_script:
    - docker image prune -f
    - docker rmi 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:v${CI_PIPELINE_ID}-$($CI_COMMIT_SHA.SubString(0,7))

build_windows_1809_x64:
  extends: .winbuild
  tags: [ "runner:windows-docker", "windowsversion:1809" ]
  variables:
    DOCKERFILE: windows/Dockerfile
    IMAGE: windows_1809_x64
    BASE_IMAGE: mcr.microsoft.com/dotnet/framework/runtime:4.8-20200114-windowsservercore-ltsc2019
    TARGET_ARCH: x64
    WINDOWS_VERSION: 1809
  resource_group: windows_x64

build_windows_1809_x86:
  extends: .winbuild
  tags: [ "runner:windows-docker", "windowsversion:1809" ]
  variables:
    DOCKERFILE: windows/Dockerfile
    IMAGE: windows_1809_x86
    BASE_IMAGE: mcr.microsoft.com/dotnet/framework/runtime:4.8-20200114-windowsservercore-ltsc2019
    TARGET_ARCH: x86
    WINDOWS_VERSION: 1809
  resource_group: windows_x86

build_windows_1909_x64:
  extends: .winbuild
  tags: [ "runner:windows-docker", "windowsversion:1909" ]
  variables:
    DOCKERFILE: windows/Dockerfile
    IMAGE: windows_1909_x64
    BASE_IMAGE: mcr.microsoft.com/dotnet/framework/runtime:4.8-20200310-windowsservercore-1909
    TARGET_ARCH: x64
    WINDOWS_VERSION: 1909
  resource_group: windows_x64

build_windows_1909_x86:
  extends: .winbuild
  tags: [ "runner:windows-docker", "windowsversion:1909" ]
  variables:
    DOCKERFILE: windows/Dockerfile
    IMAGE: windows_1909_x86
    BASE_IMAGE: mcr.microsoft.com/dotnet/framework/runtime:4.8-20200310-windowsservercore-1909
    TARGET_ARCH: x86
    WINDOWS_VERSION: 1909
  resource_group: windows_x86

.test_windows:
  extends: .test
  timeout: 2h 00m
  script:
    - if (Test-Path datadog-agent) { remove-item -recurse -force datadog-agent }
    - git clone https://github.com/DataDog/datadog-agent datadog-agent
    - cd datadog-agent
    - $VERSION="nightly"
    - git checkout master
    - docker run --rm -m 4096M -v "$(Get-Location):c:\mnt" -e CI_JOB_ID=${CI_JOB_ID} -e WINDOWS_BUILDER=true -e RELEASE_VERSION="$VERSION" -e MAJOR_VERSION="6" -e PY_RUNTIMES="2,3" -e AWS_NETWORKING=true -e SIGN_WINDOWS=true -e TARGET_ARCH="$ARCH" -e NEW_BUILDER=true 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:v${CI_PIPELINE_ID}-$($CI_COMMIT_SHA.SubString(0,7)) c:\mnt\tasks\winbuildscripts\buildwin.bat
  after_script:
    - if (Test-Path datadog-agent) { remove-item -recurse -force datadog-agent }
    - docker image prune -f
    - docker rmi 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:v${CI_PIPELINE_ID}-$($CI_COMMIT_SHA.SubString(0,7))

test_windows_1809_x64:
  extends: .test_windows
  tags: [ "runner:windows-docker", "windowsversion:1809" ]
  needs: [ "build_windows_1809_x64" ]
  variables:
    ARCH: x64
    IMAGE: windows_1809_x64

test_windows_1809_x86:
  extends: .test_windows
  tags: [ "runner:windows-docker", "windowsversion:1809" ]
  needs: [ "build_windows_1809_x86" ]
  variables:
    ARCH: x86
    IMAGE: windows_1809_x86

test_windows_1909_x64:
  extends: .test_windows
  tags: [ "runner:windows-docker", "windowsversion:1909" ]
  needs: [ "build_windows_1909_x64" ]
  variables:
    ARCH: x64
    IMAGE: windows_1909_x64

test_windows_1909_x86:
  extends: .test_windows
  tags: [ "runner:windows-docker", "windowsversion:1909" ]
  needs: [ "build_windows_1909_x86" ]
  variables:
    ARCH: x86
    IMAGE: windows_1909_x86

.release:
  stage: release
  except: [ tags, schedules ]
  only: [ master ]
  tags: [ "runner:docker", "size:large" ]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker-notary:0.6.1
  script:
    - SRC_IMAGE=486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7}
    - docker pull $SRC_IMAGE
    - docker tag $SRC_IMAGE 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:latest
    - docker push 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:latest
    - DOCKER_REGISTRY_LOGIN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent-buildimages.docker_hub_login --with-decryption --query "Parameter.Value" --out text)
    - aws ssm get-parameter --region us-east-1 --name ci.datadog-agent-buildimages.docker_hub_pwd --with-decryption --query "Parameter.Value" --out text | docker login --username "$DOCKER_REGISTRY_LOGIN" --password-stdin docker.io
    - docker tag $SRC_IMAGE datadog/agent-buildimages-$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7}
    - docker push datadog/agent-buildimages-$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7}
    - docker tag $SRC_IMAGE datadog/agent-buildimages-$IMAGE:latest
    - docker push datadog/agent-buildimages-$IMAGE:latest
  after_script:
    - docker rmi 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7} datadog/agent-buildimages-$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7} datadog/agent-buildimages-$IMAGE:latest

.winrelease:
  stage: release
  except: [ tags, schedules ]
  only: [ master ]
  tags: [ "runner:windows-docker", "windowsversion:1909" ]
  script:
    - $SHORT_CI_COMMIT_SHA = $($CI_COMMIT_SHA.Substring(0,7))
    - $SRC_TAG = "v$CI_PIPELINE_ID-$SHORT_CI_COMMIT_SHA"
    - $SRC_IMAGE = "486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:${SRC_TAG}"
    - mkdir ci-scripts
    - docker pull $SRC_IMAGE
    - |
      @"
      Set-PSDebug -Trace 1
      `$ErrorActionPreference = "Stop"
      # ECR Login
      `$AWS_ECR_PASSWORD = aws ecr get-login-password --region us-east-1
      docker login --username AWS --password "`$AWS_ECR_PASSWORD" 486234852809.dkr.ecr.us-east-1.amazonaws.com
      # DockerHub login
      `$DOCKER_REGISTRY_LOGIN = aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.docker_hub_login --with-decryption --query "Parameter.Value" --out text
      `$DOCKER_REGISTRY_PWD = aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.docker_hub_pwd --with-decryption --query "Parameter.Value" --out text
      docker login --username "`$DOCKER_REGISTRY_LOGIN" --password "`$DOCKER_REGISTRY_PWD" docker.io
      docker tag $SRC_IMAGE 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:latest
      docker push 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:latest
      docker tag $SRC_IMAGE datadog/agent-buildimages-${IMAGE}:${SRC_TAG}
      docker push datadog/agent-buildimages-${IMAGE}:${SRC_TAG}
      docker tag $SRC_IMAGE datadog/agent-buildimages-${IMAGE}:latest
      docker push datadog/agent-buildimages-${IMAGE}:latest
      "@ | out-file ci-scripts/docker-publish.ps1
    - cat ci-scripts/docker-publish.ps1
    - docker run --rm -w C:\mnt -e IS_AWS_CONTAINER=true -e SIGN_WINDOWS=true -v "$(Get-Location):C:\mnt" -v \\.\pipe\docker_engine:\\.\pipe\docker_engine $WINDOWS_RELEASE_IMAGE powershell -C C:\mnt\ci-scripts\docker-publish.ps1
  after_script:
    - docker rmi 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:v${CI_PIPELINE_ID}-$($CI_COMMIT_SHA.SubString(0,7)) datadog/agent-buildimages-${IMAGE}:v${CI_PIPELINE_ID}-$($CI_COMMIT_SHA.SubString(0,7)) datadog/agent-buildimages-${IMAGE}:latest

release_deb_x64:
  extends: .release
  needs: [ "test_deb_x64" ]
  variables:
    IMAGE: deb_x64

release_rpm_x64:
  extends: .release
  needs: [ "test_rpm_x64" ]
  variables:
    IMAGE: rpm_x64

release_windows_1809_x64:
  extends: .winrelease
  needs: [ "test_windows_1809_x64" ]
  variables:
    IMAGE: windows_1809_x64

release_windows_1809_x86:
  extends: .winrelease
  needs: [ "test_windows_1809_x86" ]
  variables:
    IMAGE: windows_1809_x86

release_windows_1909_x64:
  extends: .winrelease
  needs: [ "test_windows_1909_x64" ]
  variables:
    IMAGE: windows_1909_x64

release_windows_1909_x86:
  extends: .winrelease
  needs: [ "test_windows_1909_x86" ]
  variables:
    IMAGE: windows_1909_x86
